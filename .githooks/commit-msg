#!/usr/bin/env bash
set -euo pipefail

COMMIT_MSG_FILE="$1"
MVP_VERSION="2"
ALLOWED_VERBS="add|remove|change|fix|doc|refactor|chore|test|upgrade|downgrade|init|merge|revert|build|release"

COMMIT_SUMMARY="$(head -n1 "$COMMIT_MSG_FILE" | tr -d '\r')"

if [[ -z "$COMMIT_SUMMARY" ]]; then
    echo "[commit-msg] Commit message cannot be empty." >&2
    exit 1
fi

REGEX="^\[MVP([0-9]+)\] ($(printf '%s' "$ALLOWED_VERBS")):[[:space:]].+"

if [[ "$COMMIT_SUMMARY" =~ $REGEX ]]; then
    VERSION_CAPTURE="${BASH_REMATCH[1]}"
else
    cat >&2 <<EOF
[commit-msg] Commit message must follow: [MVP${MVP_VERSION}] verb: message
Allowed verbs: ${ALLOWED_VERBS//|/, }.
Example: [MVP${MVP_VERSION}] add: generate tick schemas
EOF
    exit 1
fi

if [[ "$VERSION_CAPTURE" != "$MVP_VERSION" ]]; then
    echo "[commit-msg] Expected MVP version [MVP${MVP_VERSION}], found [MVP${VERSION_CAPTURE}]." >&2
    exit 1
fi

echo "[commit-msg] Message format OK."
